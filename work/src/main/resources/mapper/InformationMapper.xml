<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.workdatabase.mapper.InformationMapper">
  <resultMap id="BaseResultMap" type="com.workdatabase.domain.Information">
    <id column="name" jdbcType="VARCHAR" property="name" />
    <result column="colleage_name" jdbcType="VARCHAR" property="colleageName" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="graduation_time" jdbcType="VARCHAR" property="graduationTime" />
    <result column="school_name" jdbcType="VARCHAR" property="schoolName" />
    <result column="banji" jdbcType="INTEGER" property="banji" />
    <result column="community" jdbcType="VARCHAR" property="community" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    `name`, colleage_name, phone_number, graduation_time, school_name, banji, community
  </sql>
  <select id="selectByExample" parameterType="com.workdatabase.domain.InformationExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.String" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from information
    where `name` = #{name,jdbcType=VARCHAR}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
    delete from information
    where `name` = #{name,jdbcType=VARCHAR}
  </delete>
  <delete id="deleteByExample" parameterType="com.workdatabase.domain.InformationExample">
    delete from information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.workdatabase.domain.Information">
    insert into information (`name`, colleage_name, phone_number, 
      graduation_time, school_name, banji, 
      community)
    values (#{name,jdbcType=VARCHAR}, #{colleageName,jdbcType=VARCHAR}, #{phoneNumber,jdbcType=VARCHAR}, 
      #{graduationTime,jdbcType=VARCHAR}, #{schoolName,jdbcType=VARCHAR}, #{banji,jdbcType=INTEGER},
      #{community,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.workdatabase.domain.Information">
    insert into information
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="name != null">
        `name`,
      </if>
      <if test="colleageName != null">
        colleage_name,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="graduationTime != null">
        graduation_time,
      </if>
      <if test="schoolName != null">
        school_name,
      </if>
      <if test="banji != null">
        banji,
      </if>
      <if test="community != null">
        community,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="colleageName != null">
        #{colleageName,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="graduationTime != null">
        #{graduationTime,jdbcType=DATE},
      </if>
      <if test="schoolName != null">
        #{schoolName,jdbcType=VARCHAR},
      </if>
      <if test="banji != null">
        #{banji,jdbcType=INTEGER},
      </if>
      <if test="community != null">
        #{community,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.workdatabase.domain.InformationExample" resultType="java.lang.Long">
    select count(*) from information
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update information
    <set>
      <if test="record.name != null">
        `name` = #{record.name,jdbcType=VARCHAR},
      </if>
      <if test="record.colleageName != null">
        colleage_name = #{record.colleageName,jdbcType=VARCHAR},
      </if>
      <if test="record.phoneNumber != null">
        phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="record.graduationTime != null">
        graduation_time = #{record.graduationTime,jdbcType=VARCHAR},
      </if>
      <if test="record.schoolName != null">
        school_name = #{record.schoolName,jdbcType=VARCHAR},
      </if>
      <if test="record.banji != null">
        banji = #{record.banji,jdbcType=INTEGER},
      </if>
      <if test="record.community != null">
        community = #{record.community,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update information
    set `name` = #{record.name,jdbcType=VARCHAR},
      colleage_name = #{record.colleageName,jdbcType=VARCHAR},
      phone_number = #{record.phoneNumber,jdbcType=VARCHAR},
      graduation_time = #{record.graduationTime,jdbcType=VARCHAR},
      school_name = #{record.schoolName,jdbcType=VARCHAR},
      banji = #{record.banji,jdbcType=INTEGER},
      community = #{record.community,jdbcType=VARCHAR}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.workdatabase.domain.Information">
    update information
    <set>
      <if test="colleageName != null">
        colleage_name = #{colleageName,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="graduationTime != null">
        graduation_time = #{graduationTime,jdbcType=VARCHAR},
      </if>
      <if test="schoolName != null">
        school_name = #{schoolName,jdbcType=VARCHAR},
      </if>
      <if test="banji != null">
        banji = #{banji,jdbcType=INTEGER},
      </if>
      <if test="community != null">
        community = #{community,jdbcType=VARCHAR},
      </if>
    </set>
    where `name` = #{name,jdbcType=VARCHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.workdatabase.domain.Information">
    update information
    set colleage_name = #{colleageName,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      graduation_time = #{graduationTime,jdbcType=VARCHAR},
      school_name = #{schoolName,jdbcType=VARCHAR},
      banji = #{banji,jdbcType=INTEGER},
      community = #{community,jdbcType=VARCHAR}
    where `name` = #{name,jdbcType=VARCHAR}
  </update>
</mapper>